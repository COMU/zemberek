<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Lisans bilgisi icin lutfen proje ana dizinindeki zemberek2-lisans.txt dosyasini okuyunuz.
  -->
<project name="zemberek2" default="dist" basedir=".">
	<!--Netbeans ile calisiyorsaniz asagidaki satiri (eger aktif degilse) gecerli hale getirmelisiniz.-->
	<!--<import file="nbproject/build-impl.xml"/>-->
	<!--Bu test için bir yorum satırıdır-->

	<!-- build.properties dosyasini oku.-->
	<property file="build.properties"/>

	<!-- java, test, bilgi dizinleri -->
	<property name="src.cekirdek" location="src/cekirdek"/>
	<property name="src.tr" location="src/tr"/>
	<property name="src.tk" location="src/tk"/>
	<property name="src.demo" location="src/demo"/>
	<property name="test.cekirdek" location="test/cekirdek"/>
	<property name="kaynaklar.dir" location="kaynaklar"/>

	<!-- derleme icin kullanilan dizinler -->
	<property name="build.dir" location="build"/>
	<property name="build.tum" location="build/tum"/>
	<property name="build.cekirdek" location="build/cekirdek"/>
	<property name="build.demo" location="build/demo"/>
	<property name="build.test" location="build/test"/>
	<property name="build.kaynaklar" location="build/kaynaklar"/>
	<property name="test.results" location="build/test-results"/>
	<!-- java docs -->
	<property name="java.docs" location="build/java-docs"/>
	<!-- distribution -->
	<property name="dist.dir" location="dagitim"/>
	<property name="jar.dir" location="${dist.dir}/jar"/>
	<property name="doc.dir" location="dokuman"/>

	<property name="lib.runtime" location="lib/dagitim"/>
	<property name="licences.dir" location="dokuman/lisanslar"/>
	
	
	<!--    show the library files for classpath information and a complete build(tests etc).-->
	<path id="classpath.build">
		<fileset dir="lib/dagitim"/>
		<fileset dir="lib/gelistirme"/>
		<fileset dir="${build.cekirdek}"/>
	</path>

	<!--   dagitim kutuphaneleri (eger varsa) -->
	<path id="classpath.runtime">
		<fileset dir="lib/dagitim"/>
	</path>

	<!--  src/cekirdek dizinindeki siniflari derler. -->
	<target name="derle-cekirdek">
		<mkdir dir="${build.cekirdek}"/>
		<mkdir dir="${jar.dir}"/>
		<javac srcdir="${src.cekirdek}"
               destdir="${build.cekirdek}"
               encoding="utf-8"
               classpathref="classpath.build"
               debug="true"
               source="1.5"
               target="1.5">
		</javac>
		<copy todir="${build.cekirdek}">
			<fileset dir="${src.cekirdek}">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>


	<!--  src dizinindeki siniflari derler. -->
	<target name="derle-demo" depends="derle-cekirdek">
		<mkdir dir="${build.demo}"/>
		<javac srcdir="${src.demo}"
               destdir="${build.demo}"
               encoding="utf-8"
               source="1.5"
               target="1.5">
			<classpath>
				<path refid="classpath.build"/>
				<pathelement path="${build.cekirdek}"/>
			</classpath>
		</javac>
		<copy todir="${build.cekirdek}">
			<fileset dir="${src.demo}">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>


	<target name="derle-dil" depends="derle-cekirdek">
		<fail unless="dil" message="bu ant gorevi icin 'dil' parametresi gerekli. tr, tk gibi."/>
		<mkdir dir="${build.dir}/${dil}"/>
		<javac srcdir="src/${dil}"
               destdir="${build.dir}/${dil}"
               debug="true"
               encoding="utf-8"
               source="1.5"
               target="1.5">
			<classpath>
				<path refid="classpath.build"/>
				<pathelement path="${build.cekirdek}"/>
			</classpath>
		</javac>
		<copy todir="${build.dir}/${dil}">
			<fileset dir="src/${dil}">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!--                     TEMIZLE                               -->
	<!--   Uretilen class dosyalarini, dagitim dizinini vs  siler  -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<target name="temizle">
		<delete dir="${build.dir}"/>
		<delete dir="${dist.dir}"/>
		<delete>
			<fileset dir="${kaynaklar.dir}/">
				<include name="**/*.bin"/>
				<exclude name="**/**istatistik**"/>
			</fileset>
		</delete>
		<echo message="All clean"/>
	</target>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!--                     BILGI                                 -->
	<!--   dile iliskin bilgi dosyalarini uretir.  dil parametresi ile cagrilir.  -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<target name="bilgi">
		<fail unless="dil" message="bu ant gorevi icin 'dil' parametresi gerekli. tr,tk gibi."/>
		<java classname="net.zemberek.erisim.DilBilgisiUretici" fork="true" failonerror="true">
			<classpath>
				<path refid="classpath.build"/>
				<pathelement path="${build.dir}/${dil}"/>
				<pathelement path="${build.cekirdek}"/>
				<pathelement path="${ant.home}/lib/xml-apis.jar:${ant.home}/lib/xercesImpl.jar"/>
			</classpath>
			<arg value="${dil}"/>
		</java>
	</target>


	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!--                     DIL-EKLE                                    -->
	<!--   belirli bir dile iliskin siniflari derleyip bilgi dosyalarini uretir. -->
	<!--   sonuclar build/dil/.. ve build/kaynaklar/dil/.. altina kopyalanir.-->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<target name="dil-ekle">
		<fail unless="dil" message="bu ant gorevi icin 'dil' parametresi gerekli. tr,tk gibi."/>
		<antcall target="derle-dil">
			<param name="dil" value="${dil}"/>
		</antcall>
		<antcall target="bilgi">
			<param name="dil" value="${dil}"/>
		</antcall>
		<copy todir="${build.tum}">
			<fileset dir="build/${dil}"/>
		</copy>
		<copy todir="${build.tum}/kaynaklar/${dil}/bilgi">
			<fileset dir="${kaynaklar.dir}/${dil}/bilgi">
				<include name="harf_${dil}.txt"/>
				<include name="kokler_${dil}.bin"/>
				<include name="ek_${dil}.xml"/>
				<include name="kelime_cebi_${dil}.txt"/>
			</fileset>
		</copy>
	</target>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!--                     JAR GOREVLERI                               -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!--          tum diller, cekirdek ve demo iceren jar                -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<target name="jar-tum" depends="temizle, derle-cekirdek, derle-demo">
		<copy todir="${build.tum}">
			<fileset dir="${build.cekirdek}"/>
			<fileset dir="${build.demo}"/>
		</copy>

		<antcall target="dil-ekle">
			<param name="dil" value="tr"/>
		</antcall>
		<antcall target="dil-ekle">
			<param name="dil" value="tk"/>
		</antcall>
		<antcall target="dil-ekle">
			<param name="dil" value="az"/>
		</antcall>
		<mkdir dir="${jar.dir}"/>
		<jar jarfile="${jar.dir}/zemberek-tum-${surum}.jar"
             basedir="${build.tum}">
			<!-- calistirilabilir jar icin gerekli class va paket bilgileri-->
			<manifest>
				<attribute name="Built-By" value="Zemberek Team"/>
				<attribute name="Main-Class"
                           value="net.zemberek.demo.DemoMain"/>
			</manifest>
		</jar>
		<echo message="jar ${jar.dir} dizininde olusturuldu."/>
	</target>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!--         cekirdek jar. sadece cekirdek kutuphaneler mevcut.      -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<target name="jar-cekirdek" depends="temizle, derle-cekirdek">
		<copy todir="${build.tum}">
			<fileset dir="${build.cekirdek}"/>
		</copy>
		<mkdir dir="${jar.dir}"/>
		<jar jarfile="${jar.dir}/zemberek-cekirdek-${surum}.jar"
             basedir="${build.tum}">
		</jar>
		<echo message="cekirdek jar ${jar.dir} dizininde olusturuldu."/>
	</target>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!--        dile ozel jar uretir. dil parametresi gerekir.           -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<target name="jar-dil" depends="derle-cekirdek">
		<fail unless="dil" message="bu ant gorevi icin 'dil' parametresi gerekli. tr,tk gibi."/>
		<mkdir dir="${jar.dir}"/>
		<antcall target="dil-ekle">
			<param name="dil" value="${dil}"/>
		</antcall>
		<mkdir dir="${build.dir}/${dil}/kaynaklar/${dil}"/>
		<copy todir="${build.dir}/${dil}/kaynaklar/${dil}">
			<fileset dir="${build.tum}/kaynaklar/${dil}"/>
		</copy>
		<jar jarfile="${jar.dir}/zemberek-${dil}-${surum}.jar"
             basedir="${build.dir}/${dil}">
		</jar>
		<echo message="zemberek-${dil} jar ${jar.dir} dizininde olusturuldu."/>
	</target>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!--       Turkce icin jar uretir                                    -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<target name="jar-tr">
		<antcall target="jar-dil">
			<param name="dil" value="tr"/>
		</antcall>
	</target>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!--       Turkmence icin jar uretir                                 -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<target name="jar-tk">
		<antcall target="jar-dil">
			<param name="dil" value="tk"/>
		</antcall>
	</target>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!--       Azerice icin jar uretir                                 -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<target name="jar-az">
		<antcall target="jar-dil">
			<param name="dil" value="az"/>
		</antcall>
	</target>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!--       Tatarca icin jar uretir                                   -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<target name="jar-tt">
		<antcall target="jar-dil">
			<param name="dil" value="tt"/>
		</antcall>
	</target>

	<!-- demo jar. sadece demo gui siniflari yer alir.   -->
	<target name="jar-demo" depends="derle-demo">
		<mkdir dir="${jar.dir}"/>
		<jar jarfile="${jar.dir}/zemberek-demo-${surum}.jar"
             basedir="${build.demo}">
			<manifest>
				<attribute name="Built-By" value="Zemberek Team"/>
				<attribute name="Main-Class"
                           value="net.zemberek.demo.DemoMain"/>
			</manifest>
		</jar>
		<echo message="demo jar ${jar.dir} dizininde olusturuldu."/>
	</target>


	<!-- ======================================================= -->
	<!--                    dagitim olusturur....                -->
	<!-- ======================================================= -->

	<!-- tüm diller için -->
	<target name="dist">
		<delete dir="${dist.dir}"/>

		<mkdir dir="${dist.dir}"/>
		<mkdir dir="${jar.dir}"/>
		<mkdir dir="${dist.dir}/belgeler" />

		<antcall target="jar-tum" />
		<antcall target="jar-cekirdek" />
		<antcall target="jar-tr" />
		<antcall target="jar-tk" />
		<antcall target="jar-az"/>
		<antcall target="jar-demo" />

		<copy todir="${dist.dir}">
			<fileset file="okubeni.txt" />
			<fileset file="surumler.txt" />
		</copy>

		<copy todir="${dist.dir}/belgeler">
			<fileset dir="${doc.dir}"/>
		</copy>

		<!-- ayni isim ile zip dosya olustur. -->
		<zip destfile="${dist.dir}/zemberek-${surum}.zip"
             basedir="${dist.dir}"
             update="true"
             excludes="**/*.zip"
             />
		<antcall target="srcdist">
    		<param name="nolibs" value="false"/>
    	</antcall>
    	<antcall target="srcdist">
    		<param name="nolibs" value="true"/>
    	</antcall>
		<echo message="Dagitim dosyalari ${dist.dir} dizininde olusturuldu."/>
	</target>
	
	<target name="srcdist">
		<condition property="nolibssuff" value="-nolibs" else="">
			<istrue value="${nolibs}"/>
		</condition>
		<condition property="libsdev" value="lib/**" else="lib/gelistirme">
			<isfalse value="${nolibs}"/>
		</condition>
		<condition property="libsdist" value="" else="lib/dagitim">
			<isfalse value="${nolibs}"/>
		</condition>
		<zip destfile="${dist.dir}/zemberek-${surum}${nolibssuff}-src.zip">
			<zipfileset dir="." prefix="zemberek-${surum}${nolibssuff}-src">
				<include name="deney/**"/>
				<include name="dokuman/**"/>
				<include name="kaynaklar/**"/>
				<!-- TODO: Uygunsa nbproject dizinini de kaldır -->
				<include name="nbproject/**"/>
				<include name="src/**"/>
				<include name="test/**"/>
				<include name="build.*"/>
				<include name="*.txt"/>
				<exclude name="kaynaklar/**/*.bin"/>
				<include name="${libsdev}"/>
				<include name="${libsdist}"/>
			</zipfileset>
		</zip>		
	</target>


	<!-- ======================================================= -->
	<!-- Create Javadocs for all classes                         -->
	<!-- ======================================================= -->
	<target name="javadocs" description="Build HTML documentation for these classes">
		<!-- generate the javadocs from the content classes -->
		<echo message="Generating the javadocs..."/>
		<delete dir="${java.docs}/api"/>
		<mkdir dir="${java.docs}/api"/>
		<javadoc
                packagenames="net.zemberek.*"
                sourcepath="${src.cekirdek}"
                destdir="${java.docs}/api"
                author="true"
                version="true"
                verbose="false"
                use="true"
                encoding="utf8"
        	    charset="utf8"
        	    defaultexcludes="no"
                windowtitle="Generated Documentation for Zemberek"
                doctitle="Generated Documentation for Zemberek"
                bottom="Copyright 2005-2008 Zemberek Development Team. All Rights Reserved.">
		</javadoc>
	</target>

	<!--    test  islemleri   -->
	<target name="unit-test" description="Run unit tests">
		<antcall target="derle-dil">
			<param name="dil" value="tr"/>
		</antcall>
		<mkdir dir="${build.test}"/>
		<javac srcdir="${test.cekirdek}"
               destdir="${build.test}"
               target="1.5"
               debug="true">
			<classpath>
				<path refid="classpath.build"/>
				<pathelement path="${build.cekirdek}"/>
				<pathelement path="${build.dir}/tr"/>
			</classpath>
		</javac>
		<copy todir="${build.test}">
			<fileset dir="${test.cekirdek}">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>

		<mkdir dir="${test.results}"/>

		<junit haltonfailure="false" fork="true" haltonerror="false" failureproperty="tests.failed" errorproperty="tests.failed" printsummary="on">
			<formatter type="xml"/>
			<formatter type="plain"/>
			<formatter type="brief" usefile="false"/>
			<classpath>
				<path refid="classpath.build"/>
				<pathelement path="${build.cekirdek}"/>
				<pathelement path="${build.dir}/tr"/>
				<pathelement path="${build.test}"/>
			</classpath>
			<batchtest todir="${test.results}">
				<fileset dir="${build.test}">
					<include name="**/Test*.class"/>
					<exclude name="**/TestGirdisi.class"/>
					<exclude name="**/TestUtils.class"/>
				</fileset>
			</batchtest>
		</junit>
		<fail if="tests.failed"/>
	</target>


</project>
