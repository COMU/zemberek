<!--
~  ***** BEGIN LICENSE BLOCK *****
~
~  Version: MPL 1.1
~
~  The contents of this file are subject to the Mozilla Public License Version
~  1.1 (the "License"); you may not use this file except in compliance with
~  the License. You may obtain a copy of the License at
~  http://www.mozilla.org/MPL/
~
~  Software distributed under the License is distributed on an "AS IS" basis,
~  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
~  for the specific language governing rights and limitations under the
~  License.
~
~  The Original Code is "Zemberek Dogal Dil Isleme Kutuphanesi".
~
~  The Initial Developer of the Original Code is
~  Mehmet D. Akin.
~  Portions created by the Initial Developer are Copyright (C) 2006
~  the Initial Developer. All Rights Reserved.
~
~  Contributor(s):
~   Serkan Kaba
~
~  ***** END LICENSE BLOCK *****
-->

<project name="zemberek_server" default="java">

    <!-- read the parameters from build.properties file.-->
    <property file="build.properties"/>

    <!-- source files. java, test, configuration files. -->
    <property name="src.java" location="src"/>
    <property name="src.test" location="test"/>
    <property name="src.config" location="config"/>

    <!-- after compilation, where will we put the class files?. -->
    <property name="build.dir" location="build"/>
    <property name="build.java" location="build/java"/>
    <property name="build.test" location="build/test"/>
    <property name="test.results" location="build/test-results"/>
    <!--distribution -->
    <property name="dist.dir" location="dist"/>
    <property name="lib.runtime" location="lib"/>
    <property name="licences.dir" location="lisanslar"/>

    <!--    show the library files for classpath information and a complete build(tests etc).-->
    <path id="classpath.build">
        <fileset dir="lib"/>
    </path>

    <!--    library files for runtime only.-->
    <path id="classpath.runtime">
        <fileset dir="lib"/>
    </path>

    <!--    Compiles the java files. and results will be copied to build directory-->
    <target name="java" description="Compile Java">
        <mkdir dir="${build.java}"/>
        <javac srcdir="${src.java}"
            destdir="${build.java}"
            classpathref="classpath.build" encoding="utf-8"/>
        <copy todir="${build.java}">
            <fileset dir="${src.java}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>

        <mkdir dir="${build.test}"/>
        <javac srcdir="${src.test}"
            destdir="${build.test}"
            debug="true" encoding="utf-8">
            <classpath>
                <path refid="classpath.build"/>
                <pathelement path="${build.java}"/>
            </classpath>
        </javac>
        <copy todir="${build.test}">
            <fileset dir="${src.test}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>

    <!--    copies the configuration files to the buid directory
    <target name="config" description="Generate and assemble configuration">
        <copy todir="${build.kaynaklar}/config">
            <fileset dir="${src.config}"/>
        </copy>
        <copy todir="${build.kaynaklar}">
            <fileset dir="${src.kaynaklar}"/>
        </copy>
    </target>
    -->

    <!--    Cleans the compiled files.-->
    <target name="clean" description="Clean up built files">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
        <echo message="All clean"/>
    </target>

    <target name="dist" depends="clean,java"
        description="Generates distribution files">
        <delete dir="${dist.dir}"/>
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${dist.dir}/lib"/>
        <mkdir dir="${dist.dir}/config"/>
         
        <copy todir="${dist.dir}/lib">
            <fileset dir="${lib.runtime}">
            </fileset>
        </copy>

    	<copy todir="${dist.dir}/config">
            <fileset dir="${src.config}">
            </fileset>
        </copy>
    	
        <copy todir="${dist.dir}/lisanslar">
            <fileset dir="${licences.dir}">
            </fileset>
        </copy>
    	
    	<copy file="run.sh" todir="${dist.dir}" />
    	<copy file="runtest_dbus.sh" todir="${dist.dir}" /> 
    	<copy file="runtest_socket.sh" todir="${dist.dir}" />
    	<copy file="zemberek-server.xml" todir="${dist.dir}" />
        <tstamp>
            <format property="release" pattern="-dMMMyy" locale="tr"/>
        </tstamp>
        <jar jarfile="${dist.dir}/${isim}-${surum}.jar" basedir="${build.java}">
            <!-- executable jar icin gerekli class va paket bilgileri-->
            <manifest>
                <attribute name="Built-By" value="zemberek team"/>
                <attribute name="Main-Class"
                    value="net.zemberekserver.server.ZemberekServer"/>
                <attribute name="Class-Path"
                    value=". lib/mina-core-1.1pre.jar lib/slf4j-nop.jar lib/zemberek-cekirdek-2.0.jar lib/zemberek-tr-2.0.jar lib/dbus.jar lib/unix.jar"/>
            </manifest>
        </jar>
        <!-- create the zip file with the same naming scheme -->
        <zip destfile="${dist.dir}/${isim}-${surum}.zip"
            basedir="${dist.dir}"
            update="true"
            excludes="**/*.zip"
            />

    </target>

</project>
