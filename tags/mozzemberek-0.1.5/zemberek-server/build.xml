<!--
~  ***** BEGIN LICENSE BLOCK *****
~
~  Version: MPL 1.1
~
~  The contents of this file are subject to the Mozilla Public License Version
~  1.1 (the "License"); you may not use this file except in compliance with
~  the License. You may obtain a copy of the License at
~  http://www.mozilla.org/MPL/
~
~  Software distributed under the License is distributed on an "AS IS" basis,
~  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
~  for the specific language governing rights and limitations under the
~  License.
~
~  The Original Code is "Zemberek Dogal Dil Isleme Kutuphanesi".
~
~  The Initial Developer of the Original Code is
~  Mehmet D. Akin.
~  Portions created by the Initial Developer are Copyright (C) 2006
~  the Initial Developer. All Rights Reserved.
~
~  Contributor(s):
~   Serkan Kaba
~
~  ***** END LICENSE BLOCK *****
-->

<project name="zemberek-server" default="jar">

    <!-- read the parameters from build.properties file.-->
    <property file="build.properties"/>

    <!-- source files. java, test, configuration files. -->
    <property name="src.java" location="src"/>
    <property name="src.test" location="test"/>
    <property name="src.config" location="config"/>

    <!-- after compilation, where will we put the class files?. -->
    <property name="build.dir" location="build"/>
    <property name="build.java" location="build/java"/>
    <property name="build.test" location="build/test"/>
    <property name="test.results" location="build/test-results"/>
    <!--distribution -->
    <property name="dist.dir" location="dist"/>
    <property name="lib.runtime" location="lib"/>
    <property name="licences.dir" location="lisanslar"/>
	
	<property name="mainclass.all" value="net.zemberekserver.server.ZemberekServer"/>
	<property name="mainclass.dbus" value="net.zemberekserver.server.dbus.ZemberekDbus"/>
	<property name="mainclass.socket" value="net.zemberekserver.server.socket.SocketServer"/>
	
    <!--    show the library files for classpath information and a complete build(tests etc).-->
    <path id="classpath.build">
        <fileset dir="lib"/>
    </path>

    <!--    library files for runtime only.-->
    <path id="classpath.runtime">
        <fileset dir="lib"/>
    </path>

    <!--    Compiles the java files. and results will be copied to build directory-->
    <target name="java" description="Compile Java">
        <mkdir dir="${build.java}"/>
    	<condition property="build.type" value="${build.type}" else="all">
    		<isset property="${build.type}"/>
    	</condition>
    	<condition property="${build.all}">
    	    <equals arg1="${build.type}" arg2="all"/>
    	</condition>
    	<condition property="${build.dbus}">
    		<or>
    			<equals arg1="${build.type}" arg2="dbus"/>
    			<equals arg1="${build.type}" arg2="all"/>
    		</or>
    	</condition>
    	<condition property="${build.socket}">
    	    <or>
    	    	<equals arg1="${build.type}" arg2="socket"/>
    	    	<equals arg1="${build.type}" arg2="all"/>
    		</or>
    	</condition>
    	<javac srcdir="${src.java}"
            destdir="${build.java}"
            classpathref="classpath.build" encoding="utf-8">
        	<exclude name="net/zemberekserver/server/ZemberekServer.java" unless="${build.all}"/>
        	<exclude name="net/zemberekserver/**/dbus/**" unless="${build.dbus}"/>
    		<exclude name="net/zemberekserver/**/socket/**" unless="${build.socket}"/>
    	</javac>
        <mkdir dir="${build.test}"/>
        <javac srcdir="${src.test}"
            destdir="${build.test}"
            debug="true" encoding="utf-8">
            <classpath>
                <path refid="classpath.build"/>
                <pathelement path="${build.java}"/>
            </classpath>
        </javac>
        <copy todir="${build.test}">
            <fileset dir="${src.test}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>

    <!--    copies the configuration files to the buid directory
    <target name="config" description="Generate and assemble configuration">
        <copy todir="${build.kaynaklar}/config">
            <fileset dir="${src.config}"/>
        </copy>
        <copy todir="${build.kaynaklar}">
            <fileset dir="${src.kaynaklar}"/>
        </copy>
    </target>
    -->

    <!--    Cleans the compiled files.-->
    <target name="clean" description="Clean up built files">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
        <echo message="All clean"/>
    </target>
	
	<target name="jar" depends="clean,java">
		<delete dir="${dist.dir}"/>
		<mkdir dir="${dist.dir}"/>
		<condition property="mainclass" value="${mainclass.all}">
			<equals arg1="${build.type}" arg2="all"/>
		</condition>
		<condition property="mainclass" value="${mainclass.dbus}">
			<equals arg1="${build.type}" arg2="dbus"/>
		</condition>
		<condition property="mainclass" value="${mainclass.socket}">
			<equals arg1="${build.type}" arg2="socket"/>
		</condition>
        <jar jarfile="${dist.dir}/${isim}-${surum}.jar" basedir="${build.java}">
            <!-- executable jar icin gerekli class va paket bilgileri-->
            <manifest>
                <attribute name="Built-By" value="zemberek team"/>
                <attribute name="Main-Class"
                    value="${mainclass}"/>
            	<!-- Classpath herşey derlenmediğinde fazladan jar içerebilir -->
                <attribute name="Class-Path"
                    value=". lib/mina-core-1.1.0.jar lib/slf4j-nop.jar lib/zemberek-cekirdek-2.1.jar lib/zemberek-tr-2.1.jar lib/dbus.jar lib/unix.jar lib/hexdump.jar"/>
            </manifest>
        </jar>
	</target>
	
	<target name="source_dist" depends="jar">
		<antcall target="tarball">
			<param name="nolibs" value="false"/>
		</antcall>
		<antcall target="tarball">
			<param name="nolibs" value="true"/>
		</antcall>
	</target>

    <target name="prepare_bindist" depends="jar"
        description="Generates distribution files">
        <mkdir dir="${dist.dir}/lib"/>
        <mkdir dir="${dist.dir}/config"/>
         
        <copy todir="${dist.dir}/lib">
            <fileset dir="${lib.runtime}">
            	<exclude name="dbus.jar" unless="${build.dbus}"/>
            	<exclude name="hexdump.jar" unless="${build.dbus}"/>
            	<exclude name="unix.jar" unless="${build.dbus}"/>
            	<exclude name="native-*/**" unless="${build.dbus}"/>
            	<exclude name="mina-core-*.jar" unless="${build.socket}"/>
            	<exclude name="slf4j-nop.jar" unless="${build.socket}"/>
            </fileset>
        </copy>

    	<copy todir="${dist.dir}/config">
            <fileset dir="${src.config}">
            </fileset>
        </copy>
    	
        <copy todir="${dist.dir}/lisanslar">
            <fileset dir="${licences.dir}">
            </fileset>
        </copy>
    	
    	<copy todir="${dist.dir}">
    		<fileset dir=".">
    			<include name="*.sh"/>
    			<exclude name="*dbus*" unless="${build.dbus}"/>
    			<exclude name="*socket*" unless="${build.socket}"/>
    			<include name="zemberek-server.xml" if="${build.dbus}"/>
    		</fileset>
    	</copy>
    	<tstamp>
            <format property="release" pattern="-dMMMyy" locale="tr"/>
        </tstamp>

       
    </target>
	
	<target name="linux_dist" depends="prepare_bindist">
		<!-- create the zip file with the same naming scheme -->
		<zip destfile="${dist.dir}/${isim}-${surum}.zip"
			basedir="${dist.dir}"
			update="true"
			excludes="**/*.zip"
		/>
		<echo level="warning">UYARI!</echo>
		<echo level="warning">Derlenmiş JNI kütüphanesi (libunix-java.so) ile ilgili sorun yaşarsanız lütfen bildiriniz.</echo>
		<echo level="warning">Kütüphaneyi kaynağını http://www.matthew.ath.cx/projects/java/ adresinden indirerek derleyebilirsiniz.</echo>
	</target>
	
	<target name="tarball">
		<condition property="nolibssuff" value="-nolibs" else="">
			<istrue value="${nolibs}"/>
		</condition>
		<condition property="libs" value="lib/**" else="lib">
			<isfalse value="${nolibs}"/>
		</condition>
		<tar
			destfile="${dist.dir}/${isim}${nolibssuff}-${surum}.tar.gz"
			compression="gzip"
			longfile="gnu">
			<tarfileset prefix="${isim}${nolibssuff}-${surum}" dir=".">
				<include name="config/**"/>
				<include name="lisanslar/**"/>
				<include name="src/**"/>
				<include name="test/**"/>
				<include name="${libs}"/>
				<include name="build.*"/>
				<include name="zemberek-server.xml"/>
			</tarfileset>
			<tarfileset prefix="${isim}${nolibssuff}-${surum}" mode="755" dir=".">
				<include name="*.sh"/>
			</tarfileset>
		</tar>
	</target>

</project>
